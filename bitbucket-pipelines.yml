image: node:14.18.1

pipelines:
  branches:
    dev:
      - step:
          name: 'Deployment to Staging'
          deployment: staging
          #caches:
           # - node
          script: # Modify the commands below to build your repository.
            - apt-get update && apt-get install -y rsync
            - ssh-keyscan -H $SSH_DEV_SERVER_IP >> ~/.ssh/known_hosts
            - cd $BITBUCKET_CLONE_DIR
            - rsync -r -v -e ssh . $SSH_SERVER_USER@$SSH_DEV_SERVER_IP:/var/opt/greenfleet-microservices --delete-before --exclude '.git'
            - ssh $SSH_SERVER_USER@$SSH_DEV_SERVER_IP 'cd /var/opt/greenfleet-microservices && sudo npm install'
            - ssh $SSH_SERVER_USER@$SSH_DEV_SERVER_IP 'cd /var/opt/greenfleet-microservices && sudo npm run install-services'
            #- ssh $SSH_SERVER_USER@$SSH_DEV_SERVER_IP 'cd /var/opt/greenfleet-backend && npm run build'
            - ssh $SSH_SERVER_USER@$SSH_DEV_SERVER_IP 'cd /var/opt/greenfleet-microservices && npm run start:dev'
    preprod:
      - step:
          name: 'Deployment to Preprod'
          deployment: Test
          # caches:
          #   - node
          script: # Modify the commands below to build your repository.
            - apt-get update && apt-get install -y rsync
            - ssh-keyscan -H $SSH_PREPROD_SERVER_IP >> ~/.ssh/known_hosts
            - cd $BITBUCKET_CLONE_DIR
            - rsync -r -v -e ssh . $SSH_SERVER_USER@$SSH_PREPROD_SERVER_IP:/var/opt/greenfleet-microservices --delete-before --exclude '.git'
            - ssh $SSH_SERVER_USER@$SSH_PREPROD_SERVER_IP 'cd /var/opt/greenfleet-microservices && sudo npm install'
            - ssh $SSH_SERVER_USER@$SSH_PREPROD_SERVER_IP 'cd /var/opt/greenfleet-microservices && sudo npm run install-services'
            #- ssh $SSH_SERVER_USER@$SSH_DEV_SERVER_IP 'cd /var/opt/greenfleet-backend && npm run build'
            - ssh $SSH_SERVER_USER@$SSH_PREPROD_SERVER_IP 'cd /var/opt/greenfleet-microservices && npm run start:preprod'
    master:
      - step:
          name: 'Deployment to Production'
          deployment: production
          # caches:
          #   - node
          script: # Modify the commands below to build your repository.
            - apt-get update && apt-get install -y rsync
            - ssh-keyscan -H $SSH_PROD_SERVER_IP >> ~/.ssh/known_hosts
            - cd $BITBUCKET_CLONE_DIR
            - rsync -r -v -e ssh . $SSH_SERVER_USER@$SSH_PROD_SERVER_IP:/var/opt/greenfleet-microservices --delete-before --exclude '.git'
            - ssh $SSH_SERVER_USER@$SSH_PROD_SERVER_IP 'cd /var/opt/greenfleet-microservices && sudo npm install'
            - ssh $SSH_SERVER_USER@$SSH_PROD_SERVER_IP 'cd /var/opt/greenfleet-microservices && sudo npm run install-services'
            #- ssh $SSH_SERVER_USER@$SSH_PROD_SERVER_IP 'cd /var/opt/greenfleet-backend && npm run build'
            - ssh $SSH_SERVER_USER@$SSH_PROD_SERVER_IP 'cd /var/opt/greenfleet-microservices && npm run start:prod'